<?xml version="1.0" encoding="UTF-8"?>
<!-- So far, this file is only used by Jetty -->
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="3.0">

	<!-- It seems that Jetty 9+Jersey 2 is ignoring JAXRSConfiguration.
		This should be supported with Servet 3.0, why not? -->

	<servlet>
		<servlet-name>jersey</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer
		</servlet-class>
		
		<!-- Register resources and providers under it.finsoft.resources. -->
		<init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>it.finsoft.resources;it.finsoft.manager</param-value>
		</init-param>

		<!-- Register other providers (not under it.finsoft.resources) -->
		<init-param>
			<param-name>jersey.config.server.provider.classnames</param-name>
			<param-value>my.package.SecurityRequestFilter;org.glassfish.jersey.filter.LoggingFilter
			</param-value>
		</init-param>

		<!-- Enable Tracing support. -->
		<init-param>
			<param-name>jersey.config.server.tracing</param-name>
			<param-value>ALL</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>jersey</servlet-name>
		<url-pattern>/ws/*</url-pattern>
	</servlet-mapping>

	<resource-ref>
		<res-ref-name>jdbc/orchestratore</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>
	<!-- At runtime the webapp accesses this as java:comp/env/jdbc/mydatasource -->

</web-app>